.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "AppConfig::CGI 3"
.TH AppConfig::CGI 3 "2015-03-01" "perl v5.32.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
AppConfig::CGI \- Perl5 module for processing CGI script parameters.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use AppConfig::CGI;
\&
\&    my $state = AppConfig::State\->new(\e%cfg);
\&    my $cgi   = AppConfig::CGI\->new($state);
\&
\&    $cgi\->parse($cgi_query);
\&    $cgi\->parse();               # looks for CGI query in environment
.Ve
.SH "OVERVIEW"
.IX Header "OVERVIEW"
AppConfig::CGI is a Perl5 module which implements a \s-1CGI\s0 interface to 
AppConfig.  It examines the \s-1QUERY_STRING\s0 environment variable, or a string
passed explicitly by parameter, which represents the additional parameters
passed to a \s-1CGI\s0 query.  This is then used to update variable values in an
AppConfig::State object accordingly.
.PP
AppConfig::CGI is distributed as part of the AppConfig bundle.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SS "\s-1USING THE\s0 AppConfig::CGI \s-1MODULE\s0"
.IX Subsection "USING THE AppConfig::CGI MODULE"
To import and use the AppConfig::CGI module the following line should appear
in your Perl script:
.PP
.Vb 1
\&    use AppConfig::CGI;
.Ve
.PP
AppConfig::CGI is used automatically if you use the AppConfig module
and create an AppConfig::CGI object through the \fBcgi()\fR method.
AppConfig::CGI is implemented using object-oriented methods.  A new
AppConfig::CGI object is created and initialised using the \fBnew()\fR
method.  This returns a reference to a new AppConfig::CGI object.  A
reference to an AppConfig::State object should be passed in as the
first parameter:
.PP
.Vb 2
\&    my $state = AppConfig::State\->new(); 
\&    my $cgi   = AppConfig::CGI\->new($state);
.Ve
.PP
This will create and return a reference to a new AppConfig::CGI object.
.SS "\s-1PARSING CGI QUERIES\s0"
.IX Subsection "PARSING CGI QUERIES"
The \f(CW\*(C`parse()\*(C'\fR method is used to parse a \s-1CGI\s0 query which can be specified 
explicitly, or is automatically extracted from the \*(L"\s-1QUERY_STRING\*(R" CGI\s0 
environment variable.  This currently limits the module to only supporting 
the \s-1GET\s0 method.
.PP
See AppConfig for information about using the AppConfig::CGI
module via the \fBcgi()\fR method.
.SH "AUTHOR"
.IX Header "AUTHOR"
Andy Wardley, \f(CW\*(C`<abw@wardley.org<gt\*(C'\fR>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 1997\-2007 Andy Wardley.  All Rights Reserved.
.PP
Copyright (C) 1997,1998 Canon Research Centre Europe Ltd.
.PP
This module is free software; you can redistribute it and/or modify it 
under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
AppConfig, AppConfig::State
